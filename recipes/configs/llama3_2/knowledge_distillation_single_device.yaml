# Config for single device knowledge distillation (KD) in knowledge_distillation_single_device.py
# using a LLAMA3 teacher and student model
#
# This config assumes that you've ran the following commands before launching KD:
# First download the student and teacher models
#   tune download meta-llama/Meta-Llama-3.2-1B --output-dir /workspace/.cache/tune/Meta-Llama-3.2-1B --ignore-patterns "original/consolidated.00.pth"
#   tune download meta-llama/Meta-Llama-3.2-3B --output-dir /workspace/.cache/tune/Meta-Llama-3.2-3B --ignore-patterns "original/consolidated.00.pth"
#
# You get better results using KD if the teacher model has already been fine-tuned on the target dataset:
#   tune run lora_finetune_single_device --config llama3_1/8B_lora_single_device
#
# To launch on a single device, run the following command from root:
#   tune run knowledge_distillation_single_device --config llama3_2/knowledge_distillation_single_device
#
# This config works only for training on single device.


# Model Arguments
model:
  # ISS
  # _component_: torchtune.models.llama3_2.llama3_2_1b
  # _component_: torchtune.models.llama3_2.qlora_llama3_2_1b
  _component_: torchtune.models.llama3_2.lora_llama3_2_1b
  # lora_attn_modules: ["q_proj","k_proj","v_proj","output_proj"]
  lora_attn_modules: ['q_proj', 'v_proj', 'output_proj']
  apply_lora_to_mlp: True
  # ISS
  apply_lora_to_output: False
  # lora_rank: 8  # higher increases accuracy and memory
  # lora_alpha: 16  # usually alpha=2*rank
  # lora_dropout: 0.0
  lora_rank: 64
  lora_alpha: 128
  lora_dropout: 0.0

teacher_model:
  _component_: torchtune.models.llama3_2.llama3_2_3b

# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: /workspace/.cache/tune/Meta-Llama-3.2-1B/original/tokenizer.model
  max_seq_len: 4098
  # max_seq_len: 2048

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /workspace/.cache/huggingface/hub/models--meta-llama--Llama-3.2-1B/snapshots/4e20de362430cd3b72f300e6b0f18e50e7166e08/
  # checkpoint_dir: /workspace/.cache/tune/Meta-Llama-3.2-1B/
  checkpoint_files: [
    model.safetensors
  ]
  # ISS
  safe_serialization: True
  recipe_checkpoint: null
  output_dir: /workspace/outputs_kd-llm/outputs/kd_11_20-stack-1/Meta-Llama-3.2-1B/
  model_type: LLAMA3_2
resume_from_checkpoint: False
save_adapter_weights_only: False

# Teacher checkpoint
teacher_checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /workspace/.cache/huggingface/hub/models--meta-llama--Llama-3.2-3B/snapshots/13afe5124825b4f3751f836b40dafda64c1ed062/ 
  # checkpoint_dir: /workspace/.cache/tune/Meta-Llama-3.2-3B/
  checkpoint_files: [
    model-00001-of-00002.safetensors,
    model-00002-of-00002.safetensors,
  ]
  # ISS
  safe_serialization: True
  recipe_checkpoint: null
  output_dir: /workspace/cs230/outputs_kd-llm/kd_11_20-stack-1/Meta-Llama-3.2-3B/
  model_type: LLAMA3_2

# Dataset and Sampler
dataset:
  # _component_: torchtune.datasets.alpaca_cleaned_dataset
  # ISS
  _component_: torchtune.datasets.text_completion_dataset
  source: bigcode/the-stack-dedup
  # source: bigcode/the-stack-smol
  data_dir: data/python
  column: content
  split: "train"
  packed: False  # True increases speed
seed: 1234
shuffle: True
# ISS
# batch_size: 16
batch_size: 8
# batch_size: 1

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  fused: True
  weight_decay: 0.01
  lr: 3e-4
lr_scheduler:
  _component_: torchtune.training.lr_schedulers.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torchtune.modules.loss.CEWithChunkedOutputLoss

kd_loss:
  _component_: torchtune.modules.loss.ForwardKLWithChunkedOutputLoss
kd_ratio: 0.5

# Training
# ISS
epochs: 1
max_steps_per_epoch: 10
# max_steps_per_epoch: 300
# max_steps_per_epoch: null
gradient_accumulation_steps: 8  # Use to increase virtual batch size
compile: True  # pytorch compile, set to true for better perf/memory

# Logging
output_dir: /workspace/.cache/tune/kd_output
metric_logger:
  _component_: torchtune.training.metric_logging.WandBLogger
  project: kd-llm
  # _component_: torchtune.training.metric_logging.DiskLogger
  # log_dir: ${output_dir}
log_every_n_steps: 1
log_peak_memory_stats: True

# Environment
device: cuda
dtype: bf16

# Activations Memory
enable_activation_checkpointing: True  # True reduces memory

# Profiler (disabled)
profiler:
  _component_: torchtune.training.setup_torch_profiler
  enabled: True

  #Output directory of trace artifacts
  output_dir: ${output_dir}/profiling_outputs

  #`torch.profiler.ProfilerActivity` types to trace
  cpu: True
  cuda: True

  #trace options passed to `torch.profiler.profile`
  profile_memory: True
  with_stack: False
  record_shapes: False
  with_flops: True

  # `torch.profiler.schedule` options:
  # wait_steps -> wait, warmup_steps -> warmup, active_steps -> active, num_cycles -> repeat
  wait_steps: 5
  warmup_steps: 3
  active_steps: 2
  num_cycles: 1
